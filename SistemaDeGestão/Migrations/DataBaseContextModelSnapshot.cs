// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeGestão.Data;

#nullable disable

namespace SistemaDeGestão.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeGestão.Models.Adicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EstoqueAtual")
                        .HasColumnType("int");

                    b.Property<int?>("GrupoAdicionalId")
                        .HasColumnType("int");

                    b.Property<int?>("MaximoPorProduto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PrecoBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoAdicionalId");

                    b.ToTable("Adicionais");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("int");

                    b.Property<int?>("RestauranteId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.HasIndex("RestauranteId1");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Complemento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EstoqueAtual")
                        .HasColumnType("int");

                    b.Property<int?>("GrupoComplementoId")
                        .HasColumnType("int");

                    b.Property<int?>("MaximoPorProduto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoComplementoId");

                    b.ToTable("Complementos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.DiasFuncionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Domingo")
                        .HasColumnType("bit");

                    b.Property<bool>("Quarta")
                        .HasColumnType("bit");

                    b.Property<bool>("Quinta")
                        .HasColumnType("bit");

                    b.Property<bool>("Sabado")
                        .HasColumnType("bit");

                    b.Property<bool>("Segunda")
                        .HasColumnType("bit");

                    b.Property<bool>("Sexta")
                        .HasColumnType("bit");

                    b.Property<bool>("Terca")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DiasFuncionamento");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiasFuncionamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HorarioAbertura")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorarioFechamento")
                        .HasColumnType("time");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiasFuncionamentoId");

                    b.HasIndex("RestauranteId")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.EnderecoEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnderecoEntrega");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.FinalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(450)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinalUsers");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.GrupoAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("LimiteSelecao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.ToTable("GrupoAdicionais");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.GrupoComplemento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Obrigatorio")
                        .HasColumnType("bit");

                    b.Property<int?>("QuantidadeMaxima")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeMinima")
                        .HasColumnType("int");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.ToTable("GrupoComplementos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoCusto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ItemPedidoOpcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemPedidoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("ReferenciaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoOpcao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemPedidoId");

                    b.ToTable("ItemPedidoOpcao");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnderecoEntregaId")
                        .HasColumnType("int");

                    b.Property<int?>("FinalUserId")
                        .HasMaxLength(450)
                        .HasColumnType("int");

                    b.Property<string>("FinalUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FinalUserTelefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NomeDaLoja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoEntregaId");

                    b.HasIndex("FinalUserId");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("RestauranteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.PedidoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PagamentoAprovado")
                        .HasColumnType("bit");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaEntrega")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PedidoPagamento");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.PedidoPendente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("PedidoJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PedidosPendentes");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EstoqueAtual")
                        .HasColumnType("int");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<string>("ImagemPrincipalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LojaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PrecoCusto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnidadeMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("LojaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoAdicional", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("AdicionalId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("MaximoPorProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoAdicional")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProdutoId", "AdicionalId");

                    b.HasIndex("AdicionalId");

                    b.ToTable("ProdutoAdicionais");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoComplemento", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("ComplementoId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("MaximoPorProduto")
                        .HasColumnType("int");

                    b.Property<bool>("Obrigatorio")
                        .HasColumnType("bit");

                    b.HasKey("ProdutoId", "ComplementoId");

                    b.HasIndex("ComplementoId");

                    b.ToTable("ProdutoComplementos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoGrupoAdicional", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoAdicionalId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId", "GrupoAdicionalId");

                    b.HasIndex("GrupoAdicionalId");

                    b.ToTable("ProdutoGrupoAdicional");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoGrupoComplemento", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoComplementoId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId", "GrupoComplementoId");

                    b.HasIndex("GrupoComplementoId");

                    b.ToTable("ProdutosGruposComplementos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Restaurante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDaLoja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("refreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("refreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Restaurantes");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Adicional", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.GrupoAdicional", null)
                        .WithMany("Adicionais")
                        .HasForeignKey("GrupoAdicionalId");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Categoria", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Restaurante", null)
                        .WithMany("Categorias")
                        .HasForeignKey("RestauranteId1");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Complemento", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.GrupoComplemento", "GrupoComplemento")
                        .WithMany("Complementos")
                        .HasForeignKey("GrupoComplementoId");

                    b.Navigation("GrupoComplemento");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Empresa", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.DiasFuncionamento", "DiasFuncionamento")
                        .WithMany()
                        .HasForeignKey("DiasFuncionamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Restaurante", "Restaurante")
                        .WithOne("Empresa")
                        .HasForeignKey("SistemaDeGestão.Models.Empresa", "RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiasFuncionamento");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.GrupoAdicional", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.GrupoComplemento", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ItemPedido", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ItemPedidoOpcao", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.ItemPedido", "ItemPedido")
                        .WithMany("OpcoesExtras")
                        .HasForeignKey("ItemPedidoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ItemPedido");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Pedido", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.EnderecoEntrega", "EnderecoEntrega")
                        .WithMany()
                        .HasForeignKey("EnderecoEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.FinalUser", "FinalUser")
                        .WithMany("Pedidos")
                        .HasForeignKey("FinalUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaDeGestão.Models.PedidoPagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EnderecoEntrega");

                    b.Navigation("FinalUser");

                    b.Navigation("Pagamento");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Produto", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Restaurante", "Restaurante")
                        .WithMany("Produtos")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoAdicional", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.Adicional", "Adicional")
                        .WithMany("Produtos")
                        .HasForeignKey("AdicionalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Produto", "Produto")
                        .WithMany("Adicionais")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Adicional");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoComplemento", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.Complemento", "Complemento")
                        .WithMany("Produtos")
                        .HasForeignKey("ComplementoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Produto", "Produto")
                        .WithMany("Complementos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Complemento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoGrupoAdicional", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.GrupoAdicional", "GrupoAdicional")
                        .WithMany("ProdutosGruposAdicionais")
                        .HasForeignKey("GrupoAdicionalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Produto", "Produto")
                        .WithMany("ProdutosGruposAdicionais")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GrupoAdicional");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ProdutoGrupoComplemento", b =>
                {
                    b.HasOne("SistemaDeGestão.Models.GrupoComplemento", "GrupoComplemento")
                        .WithMany("ProdutosGruposComplementos")
                        .HasForeignKey("GrupoComplementoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaDeGestão.Models.Produto", "Produto")
                        .WithMany("ProdutosGruposComplementos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GrupoComplemento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Adicional", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Complemento", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.FinalUser", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.GrupoAdicional", b =>
                {
                    b.Navigation("Adicionais");

                    b.Navigation("ProdutosGruposAdicionais");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.GrupoComplemento", b =>
                {
                    b.Navigation("Complementos");

                    b.Navigation("ProdutosGruposComplementos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.ItemPedido", b =>
                {
                    b.Navigation("OpcoesExtras");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Produto", b =>
                {
                    b.Navigation("Adicionais");

                    b.Navigation("Complementos");

                    b.Navigation("ProdutosGruposAdicionais");

                    b.Navigation("ProdutosGruposComplementos");
                });

            modelBuilder.Entity("SistemaDeGestão.Models.Restaurante", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Empresa")
                        .IsRequired();

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
